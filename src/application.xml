<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans-2.0.dtd">

<beans>
	<!-- DataSource-->
	<!--destroy-method="close", spring will automatically close any open connections when the application is completely finished.
	    This is necessary because HSQLDB is a file based database and that's the only way that HSQLDB can close the files properly. -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="org.hsqldb.jdbcDriver"></property>
		<property name="url" value="jdbc:hsqldb:file:database.dat;shutdown=true"></property>
		<property name="username" value="sa"></property>
		<property name="password" value=""></property>
	</bean>

	<!--Template-->
	<!-- init-method to initialize createTables() and telling Spring it needs to call that method once it is 
	created this book DAO object i.e., at the start of the program's run-->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<constructor-arg ref="dataSource"></constructor-arg>
	</bean>

	<!--Dao Beans-->
	<bean id="bookDao" class="com.example.bookstore.dataDao.BookDaoJdbcImpl" init-method="createTables">
		<constructor-arg ref="jdbcTemplate"></constructor-arg>
	</bean>

	<!-- Service beans -->
	<bean id="bookService" class="com.example.bookstore.services.BookServiceProductionImpl">
		<constructor-arg ref="bookDao"></constructor-arg>
	</bean>

	<bean id="accountsService" class="com.example.bookstore.services.AccountsServiceMockImpl"></bean>

	<!-- injecting two objects in PurchasingServiceImpl class-->
	<bean id="purchasingService" class="com.example.bookstore.services.PurchasingServiceImpl">
		<!-- ref is referring the object that has been created else where in spring container-->
		<constructor-arg ref="bookService"></constructor-arg>
		<constructor-arg ref="accountsService"></constructor-arg>
				
	</bean>
	
</beans>
