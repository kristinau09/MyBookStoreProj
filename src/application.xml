<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans" 
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
       xmlns:aop="http://www.springframework.org/schema/aop" 
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans.xsd        
        http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx 
        http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- bean definitions here -->
	
    <!-- Transaction Manager for the Project-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    	<property name="dataSource" ref="dataSource"></property>    
    </bean>
    

	<!-- DataSource-->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="org.hsqldb.jdbcDriver"></property>
		<property name="url" value="jdbc:hsqldb:file:database.dat;shutdown=true"></property>
		<property name="username" value="sa"></property>
		<property name="password" value=""></property>
	</bean>
	
	

	<!--Template-->
	
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<constructor-arg ref="dataSource"></constructor-arg>
	</bean>

	<!--Dao Beans-->
	
	<bean id="bookDao" class="com.example.bookstore.dao.BookDaoJdbcImpl" init-method="createTables">
		<constructor-arg ref="jdbcTemplate"></constructor-arg>
	</bean>

	<!-- Service beans -->
	
	<bean id="bookService" class="com.example.bookstore.services.BookServiceProductionImpl">
		<constructor-arg ref="bookDao"></constructor-arg>
	</bean>

	<bean id="accountsService" class="com.example.bookstore.services.AccountsServiceMockImpl"></bean>

	<bean id="purchasingService" class="com.example.bookstore.services.PurchasingServiceImpl">
		<constructor-arg ref="bookService"></constructor-arg>
		<constructor-arg ref="accountsService"></constructor-arg>
	</bean>

	<!-- Advice bean-->	
	
	<bean id="performingTimingAdvice" class="com.example.bookstore.advice.PerformanceTimingAdvice"></bean>
    
	
	
	<!-- Tells Spring to search for AOP annoatations-->
	<aop:aspectj-autoproxy/>
	
	<!--Now weave the advice into the classes defined by the pointcut-->
	<!--
	<aop:config>
		<aop:pointcut id="allServiceMethodThatReturnList" expression="execution ( java.util.List com.example.bookstore.services.*.*(..) )" />
		<aop:aspect ref="performingTimingAdvice">
			<aop:around method="performTimimgMeasurement" pointcut-ref="allServiceMethodThatReturnList" />
			<aop:before method="beforeAdviceTesting" pointcut-ref="allServiceMethodThatReturnList" />
		</aop:aspect>
	</aop:config>
	-->
	
	<!-- Transaction Configuration-->	
	<tx:annotation-driven transaction-manager="transactionManager"/>

	

</beans>
